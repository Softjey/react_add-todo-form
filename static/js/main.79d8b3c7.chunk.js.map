{"version":3,"sources":["api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/NewPost/NewPost.tsx","utils/getUserById.ts","App.tsx","index.tsx"],"names":["id","title","completed","userId","UserInfo","user","className","href","email","name","TodoInfo","todo","TodoList","todos","map","username","NewPost","setTodos","getNewId","Math","max","useState","isSubmitted","setIsSubmitted","setTodo","useEffect","prevTodo","handleChange","event","target","value","parseInt","handleFormSubmit","preventDefault","trimmedTitle","trim","trimmedTodo","prevTodos","method","onSubmit","type","placeholder","onChange","disabled","usersFromServer","getUserById","find","App","todosFromServer","todosList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79d8b3c7.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import User from '../../types/User';\n\ninterface Props {\n  user: User | undefined,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    user,\n    completed,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <p>\n        Id:\n        {id}\n      </p>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport Todo from '../../types/Todo';\nimport usersFromServer from '../../api/users';\n\ninterface Props {\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[],\n}\n\nexport const NewPost: React.FC<Props> = ({\n  setTodos,\n  todos,\n}) => {\n  const getNewId = () => Math.max(...todos.map(todo => todo.id)) + 1;\n\n  const { 0: isSubmitted, 1: setIsSubmitted } = useState(false);\n  const { 0: todo, 1: setTodo } = useState<Todo>({\n    id: getNewId(),\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n\n  useEffect(() => {\n    setTodo(prevTodo => ({\n      ...prevTodo,\n      id: getNewId(),\n    }));\n  }, [todos]);\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { value, name } = event.target;\n\n    setTodo((prevTodo: Todo) => ({\n      ...prevTodo,\n      [name]: name === 'userId' ? parseInt(value, 10) : value,\n    }));\n  };\n\n  const resetForm = () => {\n    setTodo({\n      title: '',\n      id: getNewId(),\n      userId: 0,\n      completed: false,\n    });\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsSubmitted(true);\n\n    const trimmedTitle = todo.title.trim();\n\n    if (trimmedTitle && todo.userId) {\n      setIsSubmitted(false);\n\n      const trimmedTodo = {\n        ...todo,\n        title: trimmedTitle,\n      };\n\n      setTodos((prevTodos: Todo[]) => [...prevTodos, trimmedTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <form\n      method=\"POST\"\n      onSubmit={(event) => handleFormSubmit(event)}\n    >\n      <div className=\"field\">\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          value={todo.title}\n          onChange={(event) => handleChange(event)}\n        />\n        {isSubmitted && !todo.title.trim() && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          name=\"userId\"\n          data-cy=\"userSelect\"\n          onChange={(event) => handleChange(event)}\n          value={todo.userId}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {isSubmitted && todo.userId === 0 && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import usersFromServer from '../api/users';\nimport User from '../types/User';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find((user: User) => userId === user.id);\n}\n\nexport default getUserById;\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport Todo from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { NewPost } from './components/NewPost';\nimport getUserById from './utils/getUserById';\n\nexport const App = () => {\n  const { 0: todos, 1: setTodos } = useState<Todo[]>(todosFromServer);\n\n  const todosList: Todo[] = todos.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewPost setTodos={setTodos} todos={todos} />\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}