{"version":3,"sources":["api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","utils/getUserById.ts","components/NewPost/NewPost.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","UserInfo","user","className","href","email","name","TodoInfo","todo","TodoList","todos","map","username","getUserById","usersFromServer","find","NewPost","setTodos","INITIAL_USER_ID","useMemo","getNewId","useCallback","Math","max","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","method","onSubmit","event","preventDefault","trim","newTodo","prevTodos","type","placeholder","value","onChange","target","disabled","App","todosFromServer","todosWithUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3caf4b8b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import User from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    user,\n    completed,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={`TodoInfo ${completed && 'TodoInfo--completed'}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <p>\n        Id:\n        {id}\n      </p>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport User from '../types/User';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find((user: User) => userId === user.id);\n}\n\nexport default getUserById;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport Todo from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport getUserById from '../../utils/getUserById';\n\ninterface Props {\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[],\n}\n\nexport const NewPost: React.FC<Props> = ({\n  setTodos,\n  todos,\n}) => {\n  const INITIAL_USER_ID = useMemo(() => '0', []);\n\n  const getNewId = useCallback(\n    (() => Math.max(...todos.map(todo => todo.id)) + 1),\n    [todos],\n  );\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(INITIAL_USER_ID);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(INITIAL_USER_ID);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (userId === INITIAL_USER_ID) {\n      setHasUserIdError(true);\n    }\n\n    if (!title.trim()) {\n      setHasTitleError(true);\n    }\n\n    if (title.trim() && userId !== INITIAL_USER_ID) {\n      setHasUserIdError(false);\n      setHasTitleError(false);\n\n      const newTodo = {\n        id: getNewId(),\n        title: title.trim(),\n        completed: false,\n        userId: +userId,\n        user: getUserById(+userId),\n      };\n\n      setTodos((prevTodos: Todo[]) => [...prevTodos, newTodo]);\n\n      resetForm();\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    if (!event.target.value.trim()) {\n      setHasTitleError(true);\n    } else {\n      setHasTitleError(false);\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(event.target.value);\n\n    if (event.target.value === INITIAL_USER_ID) {\n      setHasUserIdError(true);\n    } else {\n      setHasUserIdError(false);\n    }\n  };\n\n  return (\n    <form\n      method=\"POST\"\n      onSubmit={handleFormSubmit}\n    >\n      <div className=\"field\">\n        <input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          name=\"userId\"\n          data-cy=\"userSelect\"\n          onChange={handleUserIdChange}\n          value={userId}\n        >\n          <option value={INITIAL_USER_ID} disabled>Choose a user</option>\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport Todo from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { NewPost } from './components/NewPost';\nimport getUserById from './utils/getUserById';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const todosWithUser: Todo[] = todos.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewPost setTodos={setTodos} todos={todos} />\n\n      <TodoList todos={todosWithUser} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}